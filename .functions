# Create a new directory and enter it
function mkd() {
    mkdir -p "$@" && cd "$_";
        
}

# danger zone
function dangerous() {
    echo "   $(tput setaf 1)> $(tput setaf 2)pushd ~$(tput sgr0)"
    pushd ~;
    echo "   $(tput setaf 1)> $(tput setaf 2)sudo apt update$(tput sgr0)"
    sudo apt update;
    echo "   $(tput setaf 1)> $(tput setaf 2)sudo apt full-upgrade$(tput sgr0)"
    sudo apt full-upgrade;
    echo "   $(tput setaf 1)> $(tput setaf 2)sudo apt autoremove$(tput sgr0)"
    sudo apt autoremove;
    echo "   $(tput setaf 1)> $(tput setaf 2)sudo apt autoclean$(tput sgr0)"
    sudo apt autoclean;
    echo "   $(tput setaf 1)> $(tput setaf 2)sudo apt clean$(tput sgr0)"
    sudo apt clean;
    echo "   $(tput setaf 1)> $(tput setaf 2)popd$(tput sgr0)"
    popd;
}


# https://github.com/chubin/cheat.sh
function cheat() { curl https://cheat.sh/"$@"; }


#=== === === === === === === === === === === === === === === === === === === ===
# Fzf
#=== === === === === === === === === === === === === === === === === === === ===
# fzf - https://github.com/junegunn/fzf/wiki/examples
fz() {
    fzf --preview-window=right:70%:wrap \
        --preview 'batcat -n --theme TwoDark --color "always" {}';
}

# vim and fzf
fzv() {
    vim $(fz)
}

# fuzzy history
fzhist() {
    command=$(history | fzf --tac | sed -re 's/^\s*[0-9]+\s*//')
    echo "   $(tput setaf 1)> $(tput setaf 2)${command}$(tput sgr0)"
    eval $command
}

# cd and fzf
fzcd() {
    while true; do
        local lsd=$(echo ".." && ls -p | grep '/$' | sed 's;/$;;')
        local dir="$(find ${1:-.} -type d 2> /dev/null |
            fzf --reverse --height 25% --preview '
                    __cd_nxt="$(echo {})";
                    __cd_path="$(echo $(pwd)/${__cd_nxt} | sed "s;//;/;")";
                    echo $__cd_path;
                    echo;
                    ls -p --color=always "${__cd_path}";
        ')"
        [[ ${#dir} != 0  ]] || return 0
        builtin cd "$dir" &> /dev/null
    done
}

# fkill - kill processes - list only the ones you can kill. Modified the earlier script.
fzkill() {
    local pid 
    if [ "$UID" != "0"  ]; then
        pid=$(ps -f -u $UID | sed 1d | fzf -m | awk '{print $2}')
    else
        pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')
    fi  

    if [ "x$pid" != "x"  ]
    then
        echo $pid | xargs kill -${1:-9}
    fi  

}
