let g:airline_powerline_fonts = 1


if !has('gui_running')
  set t_Co=256
endif


let g:lightline = {
    \   'colorscheme': 'mine',
    \   'active': {
    \       'left': [
    \                [ 'mode', 'paste' ],
    \                [ 'readonly', 'filename_modified', 'gitbranch' ]
    \               ],
    \       'right': [
    \                 [ 'percent', 'lineinfo' ],
    \                 [ 'filetype']
    \                ]
    \   },
    \   'inactive': {
    \       'left': [
    \                [ 'mode_explorer' ],
    \                [ 'readonly', 'filename_modified' ],
    \               ],
    \       'right': [
    \                 [ 'filetype']
    \                ]
    \   },
    \   'tabline': {
    \       'left': [ [ 'tabs' ] ],
    \       'right': [ [ 'close' ] ],
    \   },
    \   'tab': {
    \       'active': [ 'filename', 'modified' ],
    \       'inactive': [ 'filename', 'modified' ],
    \   }
    \   'component_function': {
    \       'mode': 'LightlineMode',
    \       'mode_explorer': 'LightlineModeEx',
    \       'readonly': 'LightlineReadonly',
    \       'filename_modified': 'LightlineFilename',
    \       'gitbranch': 'LightlineBranch',
    \       'aaatata': 'LightlineAaatata',
    \       'lineinfo': 'LightlineLineinfo',
    \       'percent': 'LightlinePercent',
    \       'filetype': 'LightlineFiletype',
    \   },
    \   'tab_component_function': {
    \       'filename': 'LightlineTab',
    \       'modified': 'lightline#tab#modified',
    \       'readonly': 'lightline#tab#readonly',
    \       'tabnum': 'lightline#tab#tabnum',
    \   }
    \   'separator': { 'left': '', 'right': ''  },
    \   'subseparator': { 'left': '', 'right': ''  },
    \ }

"=== === === === === === === === === === === === === === === === === === === ===
" functions
"=== === === === === === === === === === === === === === === === === === === ===
function! LightlineMode() abort
  let l:ftmap = {
              \ 'netrw': 'EXPLORER',
              \ 'coc-explorer': 'EXPLORER',
              \ 'fugitiveblame': 'blame',
              \}
  return get(l:ftmap, &filetype, lightline#mode())
endfunction

function! LightlineModeEx() abort
  let l:ftmap = {
              \ 'netrw': 'EXPLORER',
              \ 'coc-explorer': 'EXPLORER',
              \ 'fugitiveblame': 'blame',
              \}
  return get(l:ftmap, &filetype, '')
endfunction

function! LightlineReadonly() abort
  return &readonly ? '' : ''
endfunction

function! LightlineFilename()
  if &filetype ==# 'netrw' || &filetype ==# 'coc-explorer' || &filetype ==# 'fugitiveblame'
    return ''
  endif

  let l:filename = expand('%:t') !=# '' ? expand('%:t') : '[No Name]'
  let l:modified = &modified ? ' +' : ''

  return l:filename . l:modified
endfunction

function! LightLineTab(n) abort
  let buflist = tabpagebuflist(a:n)
  let winnr = tabpagewinnr(a:n)

  let l:filetype = getbufvar(buflist[winnr - 1], '&filetype')
  let l:filename = expand('#'.buflist[winnr = 1].':t')
  let l:icon = WebDevIconsGetFileTypeSymbol(l:filename)

  if l:filetype ==# 'netrw' || l:filetype ==# 'coc-explorer' || l:filetype ==# 'fugitiveblame'
    return '[EXPLORER]'
  endif
  return l:filename !=# '' ? l:icon . ' ' . l:filename : '[No Name]'
endfunction

function! LightlineBranch() abort
  if &filetype ==# 'netrw' || &filetype ==# 'coc-explorer'
    return ''
  endif

  let l:branch = FugitiveHead()
  if l:branch ==# 'master' || l:branch ==# 'main'
    let l:branch_symbol = ''
  else
    let l:branch_symbol = 'b'
  endif

  return strlen(l:branch) ? (winwidth(0) >= 85 ? l:branch_symbol . ' ' . l:branch : l:branch_symbol) : ''
endfunction

function! LightlineAaatata() abort
  return winwidth(0) > 30 ? (winwidth(0) >= 65 ? ' ' : '') : ''
endfunction

function! LightlinePercent() abort
  if winwidth(0) < 45
    return ''
  endif

  let l:percent = line('.') * 100 / line('$') . '%'
  return printf('%-4s', l:percent)
endfunction

function! LightlineLineinfo() abort
  if winwidth(0)< 45 || &filetype ==# 'netrw' || &filetype ==# 'coc-explorer'
    return ''
  endif

  return printf("%3d:%-2d", line('.'), col('.'))
endfunction

function! LightlineFiletype() abort
  if &filetype ==# 'fugitiveblame'
    return ''
  endif

  let l:icon = WebDevIconsGetFileTypeSymbol()

  if &filetype ==# 'netrw' || &filetype ==# 'coc-explorer' || &filetype ==# 'fugitiveblame'
    let l:branch = FugitiveHead()

    if l:branch ==# 'master || l:branch ==# 'main'
      let l:branch_symbol = ''
    else
      let l:branch_symbol = 'b'
    endif
    return strlen(l:branch) ? l:branch_symbol : l:icon
  endif

  return winwidth(0) >= 65 ? l:icon . ' ' . &filetype : l:icon
endfunction
